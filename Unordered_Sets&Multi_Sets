// Complexity : O(1)
// Unordered Set
#include<bits/stdc++.h>
using namespace std;

// void print(set <string> &s){
//     for(auto value: s){
//         cout<<value<<" \n";
//     }
// }

int main(){
    unordered_set<string> s;
    int n;
    cin>>n;
    string ch;
    for (int i = 0; i < n; i++)
    {
        cin>>ch;
        s.insert(ch);
    }
    int q;
    cin>>q;
    while (q--)
    {
        cin>>ch;
        if(s.find(ch)==s.end()){
            cout<<"No !\n";
        }else{
            cout<<"Yes! \n";
        }
    }
    
    return 0;
}

//MULTISET
#include<bits/stdc++.h>
using namespace std;
  

int main(){
    multiset<string> s;
    int n;
    cin>>n;
    string ch;
    for (int i = 0; i < n; i++)
    {
        cin>>ch;
        s.insert(ch);
    }
    // auto it= s.find("grape");
    // if(it != s.end()){
    //     s.erase(it); // will delete only one iterator
    // }
    s.erase("grape"); // will delete all grape vale
    for(auto value: s){
        cout<<value<<" \n";
    }

    return 0;
}
